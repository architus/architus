use std::process::Command;

fn main() -> Result<(), Box<dyn std::error::Error>> {
    tonic_build::configure()
        .build_client(false)
        .build_server(true)
        .format(true)
        .out_dir("./grpc")
        // .compile(&["feature-gate.proto"], &["./proto"])?;
        .compile(&["feature-gate.proto"], &["../lib/ipc/proto"])?;

    // Clippy is dumb and doesn't have an easy way to exclude autogenerated code.
    assert!(Command::new("sed")
        .arg("-i.old")
        .arg(r#"1s;^;#[allow(clippy::all, clippy::pedantic, clippy::nursery)]\n;"#)
        .arg("./grpc/featuregate.rs")
        .status()?
        .success());

    Ok(())
}
