version: "3"
services:
  shard:
    image: johnyburd/shard:${TAG:-latest}
    build:
      context: ./
      dockerfile: ./shard/Dockerfile
    env_file:
      - architus.env
    environment:
      NUM_SHARDS: "${NUM_SHARDS:-1}"
    depends_on:
      - manager
      - postgres
    networks:
      - webnet
  api:
    image: johnyburd/api:${TAG:-latest}
    build:
      context: ./
      dockerfile: ./api/Dockerfile
    env_file:
      - architus.env
    environment:
      NUM_SHARDS: "${NUM_SHARDS:-1}"
    ports:
      - "5000:5000"
    depends_on:
      - rabbit
    networks:
      - webnet
  gateway:
    image: johnyburd/gateway:${TAG:-latest}
    build:
      context: ./
      dockerfile: ./gateway/Dockerfile
    env_file:
      - architus.env
    environment:
      NUM_SHARDS: "${NUM_SHARDS:-1}"
    ports:
      - "6000:6000"
    networks:
      - webnet
  postgres:
    image: johnyburd/db:${TAG:-latest}
    build:
      context: ./
      dockerfile: ./db/Dockerfile
    environment:
      POSTGRES_USER: autbot
      POSTGRES_PASSWORD: autism
      POSTGRES_DB: autbot
    ports:
      - "5432:5432"
    networks:
      - webnet
  dbmanager:
    image: johnyburd/dbmanager:${TAG:-latest}
    build: ./dbmanager
    env_file:
      - architus.env
    depends_on:
      - postgres
    networks:
      - webnet
  manager:
    image: johnyburd/manager:${TAG:-latest}
    build:
      context: ./
      dockerfile: ./manager/Dockerfile
    env_file:
      - architus.env
    environment:
      NUM_SHARDS: "${NUM_SHARDS:-1}"
    ports:
      - "5300:5300"
    volumes:
      - "./www:/var/www"
    networks:
      - webnet
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - webnet
  rabbit:
    image: johnyburd/rabbit:${TAG:-latest}
    build:
      context: ./
      dockerfile: ./rabbitmq/Dockerfile
    hostname: "rabbit"
    ports:
      - "8090:15672"
    networks:
      - webnet
  feature-gate:
    image: johnyburd/feature-gate:${TAG:-latest}
    build:
      context: ./
      dockerfile: ./feature-gate/Dockerfile
    ports:
      - "50555:50555"
    networks:
      - webnet
    env_file:
      - architus.env
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - webnet
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  logs-gateway-ingress:
    image: jazevedo6/logs-gateway-ingress:${TAG:-latest}
    build:
      context: ./
      dockerfile: ./logs/gateway-ingress/Dockerfile
    command: /opt/config.toml
    volumes:
      - type: bind
        source: ./logs/gateway-ingress/config.default.toml
        target: /opt/config.toml
    depends_on:
      - rabbit
      - feature-gate
      - logs-uptime
    networks:
      - webnet
    env_file:
      - architus.env
    environment:
      RUST_LOG: "info"
  logs-gateway-normalize:
    image: jazevedo6/logs-gateway-normalize:${TAG:-latest}
    build:
      context: ./
      dockerfile: ./logs/gateway-normalize/Dockerfile
    command: /opt/config.toml
    volumes:
      - type: bind
        source: ./logs/gateway-normalize/config.default.toml
        target: /opt/config.toml
    depends_on:
      - rabbit
    networks:
      - webnet
    env_file:
      - architus.env
    environment:
      RUST_LOG: "info"
  logs-submission:
    image: jazevedo6/logs-submission:${TAG:-latest}
    build:
      context: ./
      dockerfile: ./logs/submission/Dockerfile
    command: /opt/config.toml
    volumes:
      - type: bind
        source: ./logs/submission/config.default.toml
        target: /opt/config.toml
    depends_on:
      - logs-submission-logstash
    networks:
      - webnet
    env_file:
      - architus.env
    environment:
      RUST_LOG: "info"
  logs-uptime:
    image: jazevedo6/logs-uptime:${TAG:-latest}
    build:
      context: ./
      dockerfile: ./logs/uptime/Dockerfile
    command: /opt/config.toml
    volumes:
      - type: bind
        source: ./logs/uptime/config.default.toml
        target: /opt/config.toml
    networks:
      - webnet
    env_file:
      - architus.env
    environment:
      RUST_LOG: "info"
  logs-submission-logstash:
    image: jazevedo6/logs-logstash:${TAG:-latest}
    build:
      context: ./
      dockerfile: ./logs/submission-logstash/Dockerfile
    ports:
      - "51031:51031"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - webnet
    depends_on:
      - elasticsearch
volumes:
  elasticsearch-data:
    driver: local
networks:
  webnet:
